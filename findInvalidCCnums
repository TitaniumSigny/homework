// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8];
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9];
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6];
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5];
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6];

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5];
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3];
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4];
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5];
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4];

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4];
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9];
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3];
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3];
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];
// added a 6th one to test the unknown company part
const mystery6 = [7, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];

// An array of all the arrays above
const batch = [valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5, mystery6];

// test batch of valid

const testBatchValid = [valid1, valid2, valid3, valid4, valid5];

// test batch of invalid

const testBatchInvalid = [invalid1, invalid2, invalid3, invalid4, invalid5];

// test of a string CCnum

const stringCCnum = "4539404967869666";

// Add your functions below:

function arrayify(aCCnum) {
  // convert a string CCnum to an array of integers CCnum
  return Array.from(aCCnum, x => parseInt(x, 10));
}

/*
console.log(arrayify(stringCCnum));
*/

function validateCred(array) {
  // populate an array to work with
  let chalkboard = new Array(array.length).fill(0);
  
  // the last one is always the same
  chalkboard[array.length - 1] = array[array.length - 1];

  // boolean for whether to double or not
  let double = true; 
  let num = 0;

  for (let i = array.length - 2; i >= 0; i--) {
    
    if (double) {
      num = array[i]*2;
      if (num > 9) {
        num = num - 9;
      }
      chalkboard[i] = num;
    }
    else {
      chalkboard[i] = array[i];
    }
    double = !double;
  }

  let sum = chalkboard.reduce(function (a, b) {
    return a + b;
    }, 0);

  if (sum % 10 == 0) {
    return true;
  }
  else return false;
}

/*
console.log(validateCred([4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5]));
*/

function findInvalidCards(arrayOfCards) {
  let invalidCards = [];
  for (let k = 0; k < arrayOfCards.length; k++) {
    if (!validateCred(arrayOfCards[k])) {
      invalidCards.push(arrayOfCards[k]);
    }
  }
  return invalidCards;
}

/*
console.log(findInvalidCards(batch));
*/

function idInvalidCardCompanies(arrayOfCards) {
  let invalidCards = findInvalidCards(arrayOfCards);
  let firstDigit = 0;
  let outputArray = [];
  for (let i = 0; i < invalidCards.length; i++) {
    firstDigit = invalidCards[i][0];
    switch (firstDigit) {
      case 3:
        if (outputArray.indexOf("Amex") == -1) {
          // if it's already in there, don't add it so there won't be duplicates
          outputArray.push("Amex");
        }
        break;
      case 4:
        if (outputArray.indexOf("Visa") == -1) {
          outputArray.push("Visa");
        }
        break;
      case 5:
        if (outputArray.indexOf("Mastercard") == -1) {
          outputArray.push("Mastercard");
        }
        break;
      case 6:
        if (outputArray.indexOf("Discover") == -1) {
          outputArray.push("Discover");
        }
        break;
      default:
        if (outputArray.indexOf("Unknown Company") == -1) {
          outputArray.push("Unknown Company");
        }
    }
  }
  return outputArray;
}

console.log(idInvalidCardCompanies(batch));
